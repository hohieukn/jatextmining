#The tutorial for jatextmining with Cloudera’s Distribution For Hadoop

<wiki:toc max_depth="3" />

= はじめに =

jatextminingを使うにはHadoopの環境を整えなければなりません．しかし，複数のサーバを用意してHadoopの環境を構築するのは容易なことではありません．そこで，WindowsのPCを用い，jatextminingを簡単に試すためにCloudera社が提供するHadoopが使える環境が整えてあるVMWareイメージを使った方法を説明したいと思います．

分析の対象はwikipediaを用いて解説したいと思います．

なお，VMWareを使った仮想環境では処理能力が著しく低下するため，もし本当に分析目的で使用する場合は，ご自身でHadoopの環境を構築されることをおすすめします．

以下の手順で説明したいと思います．
  # Cloudera’s Distribution For Hadoop(CDH)の用意
  # wikipediaデータの取得
  # jatextminingを用いたwikipediaの簡単な分析

= Cloudera’s Distribution For Hadoop(CDH)の用意 =

CDHの環境を作る流れを解説したいと思います．CDHを使うにはVMware Playerをまずインストールし，その後VMWare Player上でCDHを走らせます．以下順に流れを解説します．

== VMware Playerのインストール ==
  * VMware社のページからから，VMare playerのインストーラーをダウンロードし，インストールします．
  * VMwareのインストーラーのダウンロードページはこちら : Cloudera’s Distribution For Hadoop
  * ダウンロードにはユーザ登録が必要となります
  * 2010年9月14日現在，VMware playerは無料で配布されています．もし有料との旨が表示されたら違ったものをダウンロードしようしている可能性があるのでお気をつけください．
  * 以降手順にしたがってVMware playerのインストールをしてください

== CDH2の取得 ==
  * 繰り返しとなりますが，これはCloudera社が提供している，Hadoopを使える環境が整ったVMware用のUbutuのヴァーチャルマシンです
  * 2010年9月14日現在では，ベータ版のCDH3がリリースされていますが，使うにはやや難があるめ，ここではCDH2(Stable release)を使います
  * CDHのダウンロードページにアクセスします : http://www.cloudera.com/downloads/
  * CDH2の「Virtual Machine」と表示されているリンクからCDH2のtarアーカイブがダウンロードできます
    * 2010年9月14日現在では，ダウンロード先のURLは次のようになっています : http://cloudera-vm.s3.amazonaws.com/cloudera-training-0.3.3.tar.bz2
    * CDH2は約1.2GBあるのでダウンロードに時間がかかります
[http://www.cloudera.com/downloads/ http://broomie.net/img/cdh2.png]
  * ダウンロードが完了したらcloudera-training-0.3.3.tar.gz2を解凍します
    * windowsでtar.gz2を解凍するにはいくつかの方法がありますが，私は以下のソフトウェアを使い解凍しました
      * 7 ZIP : http://www.7-zip.org/
      * Lhaplus : http://www7a.biglobe.ne.jp/~schezo/
    * 解凍にもやや時間がかかります．bz2を解凍したら，tarを解凍しなければなりません．

== CDH2の起動 ==
  * VMware Playerを起動します
  * VMware Playerが起動したら，「仮想マシンを開く」をクリックします
  * 先ほど解凍したCDH2のディレクトリの中に，cloudera-training-0.3.3.vmxというファイルがあるので，それを選択して「開く」ボタンをクリックします
    * 仮想マシンを開くときに「移動しました」「コピーしました」という選択画面が現れるので，通常は「コピーしました」を選択します
    * CDH2の起動が開始されます

=== CDH2の初期設定 ===
  * ここからCDH2の設定について解説しますが，CDH2には日本語フォントが入っていないため，puttyなどを用いて外部のターミナルから使うことをお勧めします(もちろん日本語フォントを入れれば良いのですが．)
  * CDH2はLinuxのディストリビューションとしてUbuntuを用いています．人によって初期設定はいろいろあるかもしれませんが，jatextminingを使う上で最低限設定しておいた方が良いだろうと思う事項を解説しておきます
    * Cloudera社が提供してる資料もあるので，詳しくはそちらもご参照ください
      * http://www.cloudera.com/downloads/virtual-machine/
  * ログイン
    * CDH2が起動したらログイン画面が現れるマス
    * ログインユーザID training / ログインパスワード training でログインできます
  * workspaceの更新する
    * 上記のCloudera社の解説にもあるように，まずパッケージの更新をします
{{{
$ cd ~/git
$ ./update-exercises --workspace
}}}
  * 日本語環境を整えます
{{{
sudo aptitude install language-pack-ja
sudo dpkg-reconfigure locales
}}}
    * ついでにシェルの言語設定もja_JP.UTF-8にしておきます．
    * .bashrc最後の方の行にLANG=ja_JP.UTF-8と追記して以下のコマンドを実行します(詳しい方はお好きな方法でやってください)
{{{
# LANG=ja_JP.UTF-8を追記する
emacs .bashrc
source .bashrc
}}}
  * subversionをインストールします
{{{
sudo apt-get install subversion
}}}
  * GoSenのダウンロードと設置
{{{
mkdir ~/tmp
cd ~/tmp

# GoSenのチェックアウト
svn co https://itadaki.svn.sourceforge.net/svnroot/itadaki/GoSen GoSen

# /usr/local/に設置．jatextminingではデフォルトの設定ではここに設置することになっていますが，configurationを変更すれば変更可能です
sudo cp -R ~/tmp/GoSen /usr/local/

# GoSenのビルド
cd ~/tmp/GoSen

# パッケージのビルド
ant

# 辞書のビルド
cd testdata/dictionary/
ant

# 動作確認
cd ~/tmp/GoSen/
java -cp $CLASSPATH:bin:gosen-1.0beta.jar examples.StringTaggerDemo testdata/dictionary/dictionary.xml
}}}

  * GoSenのクラスパスをHadoopのコンフィグに追加する
{{{
# Hadoopのコンフィグレーションを修正するためにユーザをhadoopに変更します
sudo su hadoop
}}}
    * Hadoopのコンフィグレーションに以下の行を追加してください
    * Hadoopのコンフィグレーションは/usr/lib/hadoop/conf/hadoop-env.sh です
{{{
L.12あたり
# Extra Java CLASSPATH elements.  Optional.
# export HADOOP_CLASSPATH=
}}}

この行を以下のように，修正してください．

{{{
# Extra Java CLASSPATH elements.  Optional.
export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:/usr/local/GoSen/gosen-1.0beta.jar:/usr/local/GoSen/jisx0213-1.0.jar
}}}

  * コンフィグレーションの修正を反映させるためにHadoopクラスターを再起動します
     * スーパーユーザーで実行してください
{{{
  # trainingユーザーの状態で
  sudo su
  for x in /etc/init.d/hadoop-0.20-* ; do ${x} stop ; done
  for x in /etc/init.d/hadoop-0.20-* ; do ${x} start ; done
}}}

  * 何かテキストをHDFSにputしてみます
{{{
# 適当なテキストファイルを作成します
training@training-vm:~/tmp$ cat test.txt
今日は晴れています。

# putしてみます
training@training-vm:~/tmp$ hadoop fs -put test.txt test.txt

# 再起動に失敗するとsafemodeになってしまい，HDFSのファイル操作ができなくなってしまいます．
# もし以下のようなメッセージが出た場合はsafemodeになってしまっています
put: org.apache.hadoop.hdfs.server.namenode.SafeModeException: Cannot create file/user/training/test.txt. Name node is in safe mode.

# safemodoを解除するには-safemode leaveを実行します
training@training-vm:~/tmp$ hadoop dfsadmin -safemode leave
Safe mode is OFF

# また，再起動に失敗などすると以下のようなエラーが出てしまう場合もあります
training@training-vm:~/tmp$ hadoop fs -put test.txt test.txt
10/09/15 23:57:11 WARN hdfs.DFSClient: DataStreamer Exception: org.apache.hadoop.ipc.RemoteException: java.io.IOException: File /user/training/test.txt could only be replicated to 0 nodes, instead of 1
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:1267)
        at org.apache.hadoop.hdfs.server.namenode.NameNode.addBlock(NameNode.java:434)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

# このようなエラーが出た場合はhttp://localhost:50070にブラウザからアクセスすると治ることがあります

# 無事putできたら内容を確認してみます

training@training-vm:~/tmp$ hadoop fs -cat test.txt
今日は晴れています。
}}}
